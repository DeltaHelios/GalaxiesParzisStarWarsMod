//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TerrainBuilder {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class EmbeddedFiles {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal EmbeddedFiles() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TerrainBuilder.EmbeddedFiles", typeof(EmbeddedFiles).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nublar.
        /// </summary>
        internal static string AppName {
            get {
                return ResourceManager.GetString("AppName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap arrow_switch {
            get {
                object obj = ResourceManager.GetObject("arrow_switch", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap brick_edit {
            get {
                object obj = ResourceManager.GetObject("brick_edit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap cancel {
            get {
                object obj = ResourceManager.GetObject("cancel", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 120
        ///
        ///uniform vec3 tint;
        ///
        ///void main() { 
        ///	gl_FragColor = vec4(gl_Color.rgb * tint, 1);
        ///}.
        /// </summary>
        internal static string default_fs {
            get {
                return ResourceManager.GetString("default_fs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap folder_brick {
            get {
                object obj = ResourceManager.GetObject("folder_brick", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancelling previous render operation.
        /// </summary>
        internal static string Info_CancellingPreviousRenderOp {
            get {
                return ResourceManager.GetString("Info_CancellingPreviousRenderOp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reloaded {0}.
        /// </summary>
        internal static string Info_FileReloaded {
            get {
                return ResourceManager.GetString("Info_FileReloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Window loaded.
        /// </summary>
        internal static string Info_WindowLoaded {
            get {
                return ResourceManager.GetString("Info_WindowLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon logo {
            get {
                object obj = ResourceManager.GetObject("logo", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generating heightmap.
        /// </summary>
        internal static string Status_GenHeightmap {
            get {
                return ResourceManager.GetString("Status_GenHeightmap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ready.
        /// </summary>
        internal static string Status_Ready {
            get {
                return ResourceManager.GetString("Status_Ready", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uploading VBO.
        /// </summary>
        internal static string Status_UploadVBO {
            get {
                return ResourceManager.GetString("Status_UploadVBO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Controls the Y at which water starts
        ///waterLevel = 0
        ///
        ///-- This is the main method that gets called to
        ///-- find the height of the terrain at each point.
        ///function terrain(x, z)
        ///
        ///	-- First, we sample the noise with a scale factor of 100.
        ///	-- The global function `noise` returns a sampled Simplex
        ///	-- heightmap with values between 0 and 1.
        ///	local h = noise(x / 100, z / 100);
        ///
        ///	-- Then, we scale the resulting noise by 10, creating a
        ///	-- maximum elevation change of 10 blocks, and return it
        ///	-- back to [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string terrain {
            get {
                return ResourceManager.GetString("terrain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsaved File.
        /// </summary>
        internal static string Title_Unsaved {
            get {
                return ResourceManager.GetString("Title_Unsaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap wrench {
            get {
                object obj = ResourceManager.GetObject("wrench", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
